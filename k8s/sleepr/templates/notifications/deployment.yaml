apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: notifications
    environment: {{ .Values.environment }}
  name: notifications
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas.notifications }}
  selector:
    matchLabels:
      app: notifications
  template:
    metadata:
      labels:
        app: notifications
        environment: {{ .Values.environment }}
    spec:
      containers:
        - image: "{{ .Values.aws.accountId }}.dkr.ecr.{{ .Values.aws.region }}.amazonaws.com/{{ .Values.images.notifications }}"
          name: notifications
          env:
            - name: PORT
              value: "{{ .Values.ports.notifications }}"
            - name: GOOGLE_OAUTH_CLIENT_ID
              value: "{{ .Values.googleOauthClientId }}"
            - name: SMTP_USER
              value: "{{ .Values.smtpUser }}"
            - name: GOOGLE_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: google
                  key: clientSecret
            - name: GOOGLE_OAUTH_REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: google
                  key: refreshToken
          ports:
            - containerPort: {{ .Values.ports.notifications }}
              name: http
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
